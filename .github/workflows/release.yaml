name: Build and Publish TypeID Extension

on:
  push:
    tags:
      - 'v*'

env:
  EXTENSION_NAME: typeid
  DOCKER_IMAGE: ghcr.io/blitss/typeid-pg

jobs:
  build-and-publish:
    strategy:
      matrix:
        pg_version: [11, 12, 13, 14, 15, 16]
        os: [ubuntu-latest, macos-latest]
        arch: [amd64, arm64]
        exclude:
          - os: macos-latest
            arch: arm64

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Install PostgreSQL (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get install -y wget gnupg
        sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
        wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
        sudo apt-get update -y -qq --fix-missing
        sudo apt-get install -y postgresql-${{ matrix.pg_version }} postgresql-server-dev-${{ matrix.pg_version }}

    - name: Install PostgreSQL (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install postgresql@${{ matrix.pg_version }}
        echo "/usr/local/opt/postgresql@${{ matrix.pg_version }}/bin" >> $GITHUB_PATH

    - name: Build Extension
      run: |
        cargo pgrx init
        cargo pgrx package --pg-config /usr/bin/pg_config-${{ matrix.pg_version }}

    - name: Package Extension
      run: |
        mkdir -p release
        tar -czvf release/${{ env.EXTENSION_NAME }}-pg${{ matrix.pg_version }}-${{ runner.os }}-${{ matrix.arch }}.tar.gz -C target/release/${{ env.EXTENSION_NAME }}-pg${{ matrix.pg_version }} .

    - name: Upload Release Asset
      uses: softprops/action-gh-release@v1
      with:
        files: release/${{ env.EXTENSION_NAME }}-pg${{ matrix.pg_version }}-${{ runner.os }}-${{ matrix.arch }}.tar.gz

  build-and-push-docker:
    needs: build-and-publish
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to GHCR
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        platforms: linux/amd64,linux/arm64
        tags: |
          ${{ env.DOCKER_IMAGE }}:latest
          ${{ env.DOCKER_IMAGE }}:${{ github.ref_name }}